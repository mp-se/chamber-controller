; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter, extra scripting
;   Upload options: custom port, speed and extra flags
;   Library options: dependencies, extra library storages
;
; Please visit documentation for the other options and examples
; http://docs.platformio.org/en/stable/projectconf.html


; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;                           
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[platformio]
lib_dir = lib
include_dir = lib

[common_env_data]
upload_speed = 460800
monitor_speed = 115200
platform = espressif8266@4.2.1
platform32 = espressif32@6.6.0
build_unflags = 
build_flags = 
	-Wl,-Map,output.map
	-D BAUD=${common_env_data.monitor_speed}
	-D USE_LITTLEFS=true
	-D CFG_APPVER="\"0.0.0\""
	-D CFG_GITREV=\""dev\""
	; !python script/git_rev.py 
lib_deps =
	; https://github.com/mp-se/Arduino-Temperature-Control-Library
    https://github.com/pstolarz/Arduino-Temperature-Control-Library.git#475f390
	https://github.com/esphome/AsyncTCP#v2.1.4
	https://github.com/mathieucarbou/ESPAsyncWebServer#v3.3.4
    https://github.com/256dpi/arduino-mqtt#v2.5.2
	#https://github.com/mp-se/espframework#1.1
    https://github.com/bblanchon/ArduinoJson#v7.2.0
	https://github.com/mp-se/OneWireNg#0.13.3
extra_scripts =  
	; script/copy_firmware.py
	; script/create_versionjson.py
html_files = 
	html/index.html
	html/app.js.gz
	html/app.css.gz
	html/favicon.ico.gz


[env:chamber-controller-32] 
framework = arduino
platform = ${common_env_data.platform32}
upload_speed = ${common_env_data.upload_speed}
monitor_speed = ${common_env_data.monitor_speed}
extra_scripts = 
	${common_env_data.extra_scripts}
 	; script/merge_firmware.py
build_unflags = 
	${common_env_data.build_unflags}
build_flags = 
	-Wl,-Map,output.map
	${common_env_data.build_flags}
	-D LOG_LEVEL=5
	; -D DEV_TESTING
	-D MAX_SKETCH_SPACE=0x1c0000
	-D ESP32
lib_deps = 
	${common_env_data.lib_deps}
	; ${common_env_data.lib_deps32}
 	https://github.com/bxparks/AUnit#v1.7.1
	ESPmDNS
	Preferences
	WiFi
	HTTPUpdate
	HTTPClient
	WiFiClientSecure
	Update
	Ticker
	DNSServer
lib_ignore = 
board = lolin32 
; build_type = release
build_type = debug
board_build.partitions = part32_coredump.csv
board_build.filesystem = littlefs 
board_build.embed_txtfiles = ${common_env_data.html_files}
monitor_filters = esp32_exception_decoder
; upload_port=/dev/cu.usbserial-10
